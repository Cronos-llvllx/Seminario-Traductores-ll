{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red160\green160\blue160;\red255\green0\blue255;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs20  1  \cb3\cf13 #include <stdlib.h>
\par \cb1\cf0\ul0\i0\b0  2  \cb3\cf13 #include <iostream>
\par \cb1\cf0\ul0\i0\b0  3  
\par \cb1\cf0\ul0\i0\b0  4  \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  5  
\par \cb1\cf0\ul0\i0\b0  6  \cb3\cf13 #include "lexico.h"
\par \cb1\cf0\ul0\i0\b0  7  \cb3\cf13 #include "sintactico.h"
\par \cb1\cf0\ul0\i0\b0  8  \cb3\cf13 #include "stdio.h"
\par \cb1\cf0\ul0\i0\b0  9  
\par \cb1\cf0\ul0\i0\b0 10  \cb3\cf11\b void \b0\cb1\cf0 analizarSintacticoArchivo\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 11  
\par \cb1\cf0\ul0\i0\b0 12  \cb3\cf11\b int \b0\cb1\cf0 main\cb3\cf22 ()\{
\par \cb1\cf0\ul0\i0\b0 13      \cb1\cf0 llenarAutomatas\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 14  
\par \cb1\cf0\ul0\i0\b0 15      \cb3\cf13\b string \b0\cb1\cf0 cadena\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 16      \cb1\cf0 system\cb3\cf22 (\cb3\cf17 "cls"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 17      \cb1\cf0 system\cb3\cf22 (\cb3\cf17 "color CF"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 18      \cb3\cf4 /*cout<<"\\t\\t::Analizador Sintactico - Lenguaje: C+ ::"<<endl;
\par \cb1\cf0\ul0\i0\b0 19      \cb3\cf4 cout<<"\\nIngresa una cadena para analizar: "; fflush(stdin); getline(cin,cadena);
\par \cb1\cf0\ul0\i0\b0 20      \cb3\cf4 analizar_cadena_sintactico(cadena);*/
\par \cb1\cf0\ul0\i0\b0 21      \cb1\cf0 analizarSintacticoArchivo\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 22  \cb3\cf11\b return \b0\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 23  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 24  
\par \cb1\cf0\ul0\i0\b0 25  \cb3\cf13\b string \b0\cb1\cf0 escanearNombreArchivo\cb3\cf22 () \{
\par \cb1\cf0\ul0\i0\b0 26      \cb3\cf13\b string \b0\cb1\cf0 archivo\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 27      \cb1\cf0 system\cb3\cf22 (\cb3\cf17 "CLS"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 28      \cb1\cf0 setlocale\cb3\cf22 (\cb1\cf0 LC_CTYPE\cb3\cf22 ,\cb3\cf17 "Spanish"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 29      \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf13\b endl \b0\cb3\cf22 << \cb3\cf17 "\\t\\tAnalizador Sintáctico" \cb3\cf22 << \cb3\cf13\b endl\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 30      \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf13\b endl \b0\cb3\cf22 << \cb3\cf17 "\\tIngrese nombre del archivo: "\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 31      \cb1\cf0 getline\cb3\cf22 (\cb3\cf13\b cin\b0\cb3\cf22 ,\cb1\cf0 archivo\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 32      \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf13\b endl \b0\cb3\cf22 << \cb3\cf17 "\\t"\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 33      \cb3\cf11\b return \b0\cb1\cf0 archivo\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 34  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 35  
\par \cb1\cf0\ul0\i0\b0 36  \cb3\cf11\b void \b0\cb1\cf0 analizarSintacticoArchivo\cb3\cf22 () \{
\par \cb1\cf0\ul0\i0\b0 37      \cb3\cf11\b char \b0\cb1\cf0 opc\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 38      \cb3\cf11\b bool \b0\cb1\cf0 continuarAnalizando \cb3\cf22 = \cb3\cf11\b true\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 39      \cb1\cf0 fflush\cb3\cf22 (\cb1\cf0 stdin\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 40      \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 continuarAnalizando\cb3\cf22 ) \{
\par \cb1\cf0\ul0\i0\b0 41          \cb1\cf0 analizarArchivo\cb3\cf22 (\cb1\cf0 escanearNombreArchivo\cb3\cf22 ());
\par \cb1\cf0\ul0\i0\b0 42          \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf13\b endl \b0\cb3\cf22 << \cb3\cf13\b endl \b0\cb3\cf22 << \cb3\cf17 "\\t¿Desea continuar analizando cadenas (S/N)? "\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 43          \cb3\cf13\b cin \b0\cb3\cf22 >> \cb1\cf0 opc\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 44          \cb3\cf11\b if\b0\cb3\cf22 ((\cb1\cf0 opc \cb3\cf22 == \cb3\cf19 's'\cb3\cf22 ) || (\cb1\cf0 opc \cb3\cf22 == \cb3\cf19 'S'\cb3\cf22 )) \{
\par \cb1\cf0\ul0\i0\b0 45              \cb1\cf0 continuarAnalizando \cb3\cf22 = \cb3\cf11\b true\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 46          \cb3\cf22 \} \cb3\cf11\b else \b0\cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 47              \cb1\cf0 continuarAnalizando \cb3\cf22 = \cb3\cf11\b false\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 48          \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 49          \cb3\cf13\b cin\b0\cb3\cf22 .\cb1\cf0 get\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 50      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 51  \cb3\cf22 \}
\par }